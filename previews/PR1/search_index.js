var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Julia","page":"Examples","title":"Julia","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Main.Utilities.adjust_color","category":"page"},{"location":"examples/#Main.Utilities.adjust_color","page":"Examples","title":"Main.Utilities.adjust_color","text":"adjust_color(c::Union{RGB, HSL}, dh::Real, ds = 0, dl = 0)\n\nAdjust the color c in HSL space.\n\nExamples\n\njulia> adjust_color(HSL(50, 0.6, 0.7), 10, -10, 5)\nHSL{Float64}(60, 0.5, 0.75)\n\n\n\n\n\n","category":"function"},{"location":"examples/","page":"Examples","title":"Examples","text":"module Utilities\n\nusing Printf\nusing Colors\nusing FixedPointNumbers\n\nexport lch_to_rgb, lch_to_rgb8, adjust_color_lch, lch_lighten, lch_darken, adjust_color, get_hsl_adjuster\nexport ContrastChecker, ColorOrbits, VariationSwatches\nexport LighterVariationSwatches, DarkerVariationSwatches\nexport TerminalPreview\n\n\nround3p1(x) = @sprintf(\"%5.1f\" , x)\n\n# Many graphics tools set the white point in the Lab color space to D50 and use\n# a linear bradford transform to convert it to the D65 in the sRGB color space.\n\nfunction rgb_to_lab(c::RGB)\n    xyz65 = convert(XYZ, c)\n    xyz50 = bradford(xyz65, Colors.WP_D65, Colors.WP_D50)\n    convert(Lab, xyz50, Colors.WP_D50)\nend\n\nfunction lab_to_rgb(c::Lab)\n    xyz50 = convert(XYZ, c, Colors.WP_D50)\n    xyz65 = bradford(xyz50, Colors.WP_D50, Colors.WP_D65)\n    convert(RGB, xyz65)\nend\n\nrgb_to_lch(c::LCHab) = c\nrgb_to_lch(c::RGB) = convert(LCHab, rgb_to_lab(c))\nlch_to_rgb(c::LCHab) = lab_to_rgb(convert(Lab, c))\nlch_to_rgb8(c::LCHab) = convert(RGB{N0f8}, lch_to_rgb(c))\n\nfunction bradford(c::XYZ, src::XYZ, dest::XYZ)\n    BFD = [ 0.8951  0.2664 -0.1614\n           -0.7502  1.7135  0.0367\n            0.0389 -0.0685  1.0296 ]\n    BFD_INV = inv(BFD)\n\n    c_lms = BFD * [c.x, c.y, c.z]\n    src_wp = BFD * [src.x, src.y, src.z]\n    dest_wp = BFD * [dest.x, dest.y, dest.z]\n    c_out = BFD_INV * (c_lms .* dest_wp ./ src_wp)\n    (typeof(c))(c_out...)\nend\n\nfunction contrast(c1::RGB, c2::RGB)\n    xyz1 = convert(XYZ, c1)\n    xyz2 = convert(XYZ, c2)\n    l2, l1 = minmax(xyz1.y, xyz2.y)\n    (l1 + 0.05) / (l2 + 0.05)\nend\n\nfunction contrast_level(cont, islarge = false)\n    if islarge\n        cont < 3.0 ? \"fail\" : cont < 4.5 ? \"AA\" : \"AAA\"\n    else\n        cont < 4.5 ? \"fail\" : cont < 7.0 ? \"AA\" : \"AAA\"\n    end\nend\n\nadjust_color_lch(c::Color, t::Tuple) = adjust_color_lch(rgb_to_lch(c), t...)\n\nfunction adjust_color_lch(c::LCHab, dl::Real, dc = 0, dh = 0)\n    lch_to_rgb8(LCHab(c.l + dl * 2.5, c.c + dc * 2.5, c.h + dh))\nend\n\nadjust_color(c, t::Tuple) = adjust_color(c, t...)\n\n\"\"\"\n    adjust_color(c::Union{RGB, HSL}, dh::Real, ds = 0, dl = 0)\n\nAdjust the color `c` in HSL space.\n\n# Examples\n```jldoctest\njulia> adjust_color(HSL(50, 0.6, 0.7), 10, -10, 5)\nHSL{Float64}(60, 0.5, 0.75)\n```\n\"\"\"\nfunction adjust_color(c::Union{RGB, HSL}, dh::Real, ds = 0, dl = 0)\n    hsl = HSL(c)\n    h = normalize_hue(hsl.h + dh)\n    s = clamp(hsl.s + ds * 0.01, 0.0, 1.0)\n    l = clamp(hsl.l + dl * 0.01, 0.0, 1.0)\n    convert(RGB{N0f8}, HSL(h, s, l))\nend\n\nfunction get_hsl_adjuster(c::RGB, dl)\n    hsl0 = HSL(c)\n    lch0 = rgb_to_lch(c)\n    lch1 = rgb_to_lch(lch_to_rgb(LCHab(lch0.l + dl, lch0.c - 0.4 * abs(dl), lch0.h)))\n    lch = LCHab(lch1.l, min(lch1.c, lch0.c), lch0.h)\n    hsl = HSL(lch_to_rgb(lch))\n    dh0 = round(Int, mod(hsl.h - hsl0.h - 180.0, 360) - 180)\n    ds0 = round(Int, 100.0 * (hsl.s - hsl0.s))\n    dl0 = round(Int, 100.0 * (hsl.l - hsl0.l))\n    dh0, ds0, dl0\nend\n\nlch_lighten(c::RGB, a) = adjust_color(c, get_hsl_adjuster(c, a))\nlch_darken(c::RGB, a) = adjust_color(c, get_hsl_adjuster(c, -a))\n\nstruct ContrastChecker{T}\n    colors::T\nend\n\nBase.showable(::MIME\"text/html\", ::ContrastChecker) = true\n\nfunction Base.show(io::IO, ::MIME\"text/html\", cc::ContrastChecker)\n    write(io, \"\"\"<pre class=\"contrast\" style=\"padding:2pt;\">\"\"\")\n    for c in cc.colors\n        hex6 = hex(c)\n        base = XYZ(c).y > 0.6 ? colorant\"black\" : colorant\"white\"\n        hex6b = hex(base)\n        cont = contrast(base, c)\n        scont = lpad(round3p1(cont), 5)\n        sl = lpad(contrast_level(cont, false), 4)\n        ll = lpad(contrast_level(cont, true), 4)\n        write(io, \"\"\"<span style=\"font-size:14pt\">\"\"\")\n        write(io, \"\"\"<span style=\"background:#$hex6;color:#$hex6b\">$scont:1 small</span>\"\"\")\n        write(io, \"\"\"<span style=\"background:#$hex6b;color:#$hex6\">($sl) </span>\"\"\", )\n        write(io, \"\"\"<span style=\"font-weight:bold\">\"\"\")\n        write(io, \"\"\"<span style=\"background:#$hex6;color:#$hex6b\"> LARGE</span>\"\"\")\n        write(io, \"\"\"<span style=\"background:#$hex6b;color:#$hex6\">($ll) </span>\"\"\", )\n        write(io, \"</span></span><br>\")\n    end\n    write(io, \"</pre>\")\nend\n\nstruct ColorOrbits{T1, T2}\n    id::String\n    colors1::T1\n    colors2::T2\n    bg::RGB\nend\n\nBase.showable(::MIME\"text/html\", ::ColorOrbits) = true\n\nfunction Base.show(io::IO, ::MIME\"text/html\", co::ColorOrbits)\n    write(io, \"<html><body>\")\n    write(io, \"\"\"<svg id=\"$(co.id)\" class=\"ColorOrbits\" xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"60mm\" height=\"60mm\" viewBox=\"-60,-60,120,120\"\n                      fill=\"none\" stroke=\"none\">\"\"\")\n    write(io, \"\"\"<rect fill=\"#$(hex(co.bg))\" x=\"-60\" y=\"-60\" width=\"120\" height=\"120\" />\"\"\")\n    colors = (co.colors1..., co.colors2...)\n    sq = !occursin(\"both\", co.id)\n    for rgb in colors\n        lch = rgb_to_lch(rgb)\n        l = lch.l * 0.6\n        c = min(lch.c / 130, 1.0)\n        write(io, \"\"\"<circle r=\"$l\" stroke-opacity=\"$c\" stroke=\"#$(hex(rgb))\" />\"\"\")\n        y, x = 58 .* sincosd(-lch.h)\n        write(io, \"\"\"<path d=\"m 0,0 l $x, $y\" stroke-opacity=\"$c\" stroke=\"#aaa\" />\"\"\")\n    end\n    for (i, rgb) in enumerate(colors)\n        lch = rgb_to_lch(rgb)\n        y, x = (lch.l * 0.6) .* sincosd(-lch.h)\n        hex6 = hex(rgb)\n        if sq && i <= length(co.colors1)\n            write(io, \"\"\"<rect x=\"$(x-3)\" y=\"$(y-3)\" width=\"6\" height=\"6\" stroke-width=\"1\" stroke=\"#$hex6\" />\"\"\")\n        else\n            write(io, \"\"\"<circle cx=\"$x\" cy=\"$y\" r=\"3\" fill=\"#$hex6\" />\"\"\")\n        end\n    end\n    write(io, \"</svg>\")\n    write(io, \"</body></html>\")\nend\n\nstruct VariationSwatches\n    base::RGB{N0f8}\n    bg::RGB{N0f8}\n    choosed::Tuple{Int, Int}\nend\n\nBase.showable(::MIME\"text/html\", ::VariationSwatches) = true\n\nfunction Base.show(io::IO, ::MIME\"text/html\", sw::VariationSwatches)\n    bg = LCHab(sw.bg)\n    bw = bg.l < 60 ? RGB(1, 1, 1) : RGB(0, 0, 0)\n    text = hex(bw)\n    write(io, \"<html><body>\")\n    write(io, \"\"\"<svg class=\"swatches\" xmlns=\"http://www.w3.org/2000y/svg\"\n                      width=\"50mm\" height=\"50mm\" viewBox=\"0,0,120,120\" fill=\"#$text\">\"\"\")\n    write(io, \"\"\"<rect fill=\"#$(hex(sw.bg))\" width=\"120\" height=\"120\" />\"\"\")\n    write(io, \"\"\"<path fill=\"#aaa\" d=\"m 13,54 l -5,-3 v 6 z\" />\"\"\")\n    write(io, \"\"\"<path fill=\"#aaa\" d=\"m 60,8 l -3,-5 h 6 z\" />\"\"\")\n    lch = rgb_to_lch(sw.base)\n    ls = range(lch.l + 10, lch.l - 10, length = 9)\n    cs = range(lch.c - 10, lch.c + 10, length = 9)\n    for i = 1:9, j = 1:9\n        y, x = (i - 1) * 10 + 10, (j - 1) * 10 + 16\n        lch_o = LCHab(ls[i], cs[j], lch.h)\n        rgb = lch_to_rgb8(lch_o)\n        lch_b = rgb_to_lch(rgb)\n        isapprox(lch_o, lch_b, atol = 2.0) || continue\n        hex6 = hex(rgb)\n        sl, sc, sh = round3p1.((lch_b.l, lch_b.c, lch_b.h))\n        cont = contrast(rgb, bg.c < 20 ? sw.bg : bw)\n        scont = round3p1(cont)\n        level = contrast_level(cont)\n        choosed = sw.choosed == (5 - i, j - 5) ? \"class=\\\"choosed\\\"\" : \"\"\n        write(io,\n            \"\"\"\n            <g>\n                <rect x=\"$x\" y=\"$y\" width=\"8\" height=\"8\" fill=\"#$hex6\" $choosed/>\n                <text x=\"2\" y=\"107\" xml:space=\"preserve\">LCHab($sl,$sc,$sh)</text>\n                <text x=\"2\" y=\"117\" xml:space=\"preserve\">#$hex6  $scont:1 ($level)</text>\n            </g>\n            \"\"\")\n    end\n    write(io, \"</svg>\")\n    write(io, \"</body></html>\")\nend\n\nstruct LightnessVariationSwatches{M}\n    base::RGB{N0f8}\n    bg::RGB{N0f8}\n    choosed::Int\nend\nconst LighterVariationSwatches = LightnessVariationSwatches{:L}\nconst DarkerVariationSwatches = LightnessVariationSwatches{:D}\n\n\nBase.showable(::MIME\"text/html\", ::LightnessVariationSwatches) = true\n\nfunction Base.show(io::IO, ::MIME\"text/html\", sw::LightnessVariationSwatches{M}) where M\n    bg = LCHab(sw.bg)\n    bw = (bg.c < 20 && bg.l < 60) || (bg.c >= 20 && M === :D) ? RGB(1, 1, 1) : RGB(0, 0, 0)\n    text = hex(bw)\n    hsl0 = HSL(sw.base)\n    write(io, \"<html><body>\")\n    write(io, \"\"\"<svg class=\"swatches\" xmlns=\"http://www.w3.org/2000y/svg\"\n                      width=\"200mm\" height=\"10mm\" viewBox=\"0,0,480,24\" fill=\"#$text\">\"\"\")\n    write(io, \"\"\"<rect fill=\"#$(hex(sw.bg))\" width=\"480\" height=\"24\" />\"\"\")\n    write(io, \"\"\"<path fill=\"#aaa\" d=\"m 110,8 l -3,-5 h 6 z\" />\"\"\")\n\n    for dl = 0:36\n        x = dl * 10 + 106\n        dh0, ds0, dl0 = get_hsl_adjuster(sw.base, M === :D ? -dl : dl)\n        rgb = adjust_color(hsl0, dh0, ds0, dl0)\n        hex6 = hex(rgb)\n        cont = contrast(rgb, bg.c < 20 ? sw.bg : bw)\n        scont = round3p1(cont)\n        level = contrast_level(cont)\n        choosed = sw.choosed == dl ? \"class=\\\"choosed\\\"\" : \"\"\n        write(io,\n            \"\"\"\n            <g>\n                <rect x=\"$x\" y=\"10\" width=\"8\" height=\"8\" fill=\"#$hex6\" $choosed/>\n                <text x=\"2\" y=\"12\" xml:space=\"preserve\">h:$dh0 s:$ds0% l:$dl0%</text>\n                <text x=\"2\" y=\"22\" xml:space=\"preserve\">$dl #$hex6  $scont:1 ($level)</text>\n            </g>\n            \"\"\")\n    end\n    write(io, \"</svg>\")\n    write(io, \"</body></html>\")\nend\n\nstruct TerminalPreview\n    ansi_colors::Vector{RGB{N0f8}}\n    bg::RGB{N0f8}\nend\n\nBase.showable(::MIME\"text/html\", ::TerminalPreview) = true\n\nfunction Base.show(io::IO, ::MIME\"text/html\", t::TerminalPreview)\n    m = XYZ(t.bg).y > 0.6 ? \"light\" : \"dark\"\n    write(io, \"\"\"<pre class=\"terminal-$m\"><code class=\"ansi nohighlight\">\"\"\")\n    names = (\"black\", \"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"white\")\n    for i = 0:15\n        idx = lpad(string(i),3)\n        fg = i < 8 ? 30 + i : 90 - 8 + i\n        bg = fg + 10\n        name = lpad(i < 8 ? names[i + 1] : \"light_\" * names[i - 7], 14)\n        cont = contrast(t.ansi_colors[i + 1], t.bg)\n        scont = round3p1(cont)\n        level = contrast_level(cont)\n        write(io, \"\"\"<span class=\"sgr$fg\"><span class=\"sgr$bg\">  </span>$idx  $name\"\"\")\n        write(io, \"\"\"   Contrast$scont:1 ($level)</span>\\n\"\"\")\n    end\n    write(io, \"\"\"</code></pre>\"\"\")\nend\n\nend #module","category":"page"},{"location":"examples/#YAML","page":"Examples","title":"YAML","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"name: Documentation\n\non:\n  push:\n    branches:\n      - master\n    tags: '*'\n  pull_request:\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: julia-actions/setup-julia@latest\n        with:\n          version: '1'\n      - name: Install dependencies\n        run: julia --project=documenter.jl/ -e 'using Pkg; Pkg.instantiate()'\n      - name: Build and deploy\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token\n          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key\n        run: julia --project=documenter.jl/ documenter.jl/make.jl","category":"page"},{"location":"examples/#CSS","page":"Examples","title":"CSS","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"\nsvg.swatches text {\n    font-size: 8px;\n    display: none;\n}\nsvg.swatches g rect:hover {\n    stroke-width: 1;\n    stroke: currentColor;\n}\n\nsvg.swatches g:hover text {\n    display: inherit;\n}\n\nsvg.swatches g rect.choosed {\n    stroke-width: 1.5;\n    stroke: #aaa;\n    animation: stroke-blink 1s infinite alternate;\n}\n\npre.contrast {\n    display: inline-block;\n    width: auto;\n}\n\npre.terminal-dark {\n    display: none;\n}\nhtml.theme--documenter-dark pre.terminal-light {\n    display: none;\n}\nhtml.theme--documenter-dark pre.terminal-dark {\n    display: block;\n}\n\n@keyframes stroke-blink {\n    0% {\n        stroke-opacity: 0;\n    }\n    50% {\n        stroke-opacity: 0;\n    }\n    100% {\n        stroke-opacity: 1;\n    }\n}","category":"page"},{"location":"design-language/#Design-Language","page":"Design Language","title":"Design Language","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"using Colors\nusing Main.Utilities\n\nbg_light = colorant\"#f5f5f5\"\nbg_dark  = colorant\"#282f2f\"\n\nbg_documenter_light = colorant\"#ffffff\"\nbg_documenter_dark  = colorant\"#1f2424\"\n\njl_red    = Colors.JULIA_LOGO_COLORS.red\njl_green  = Colors.JULIA_LOGO_COLORS.green\njl_blue   = Colors.JULIA_LOGO_COLORS.blue\njl_purple = Colors.JULIA_LOGO_COLORS.purple\n\njl_logo_colors = (jl_red, jl_green, jl_blue, jl_purple)\n\n# unofficial colors based on the Julia logo colors\njl_orange    = LCHab(55, 70, 60)\njl_yellow    = LCHab(80, 65, 85)\njl_turquoise = LCHab(70, 39, 215)\njl_cyan      = LCHab(60, 50, 265)\n\njl_colors = (jl_red, jl_orange, jl_yellow, jl_green,\n             jl_turquoise, jl_cyan, jl_blue, jl_purple)\n\nd27_primary   = colorant\"#4eb5de\"\nd27_red       = colorant\"#da0b00\"\nd27_orange    = colorant\"#ff470f\" # bulma default\nd27_yellow    = colorant\"#ffdd57\" # bulma default\nd27_green     = colorant\"#22c35b\"\nd27_turquoise = colorant\"#1db5c9\"\nd27_cyan      = colorant\"#209cee\" # bulma default\nd27_blue      = colorant\"#2e63b8\"\nd27_purple    = colorant\"#b86bff\" # bulma default\n\nd27_colors_light = (d27_red, d27_orange, d27_yellow, d27_green,\n                    d27_turquoise, d27_cyan, d27_blue, d27_purple)\n\nd27_primary_dark   = colorant\"#1abc9c\" # DARKLY's turquoise\nd27_red_dark       = colorant\"#9e1b0d\"\nd27_orange_dark    = colorant\"#e67e22\" # DARKLY\nd27_yellow_dark    = colorant\"#ad8100\"\nd27_green_dark     = colorant\"#008438\"\nd27_turquoise_dark = colorant\"#137886\"\nd27_cyan_dark      = colorant\"#024c7d\"\nd27_blue_dark      = colorant\"#3498db\" # DARKLY\nd27_purple_dark    = colorant\"#8e44ad\" # DARKLY\n\nd27_colors_dark = (d27_red_dark, d27_orange_dark, d27_yellow_dark, d27_green_dark,\n                   d27_turquoise_dark, d27_cyan_dark, d27_blue_dark, d27_purple_dark)\n\n# dl, dc\ntw_red       = ( 0,  0)\ntw_orange    = ( 1,  3)\ntw_yellow    = ( 1,  4)\ntw_green     = ( 0,  3)\ntw_turquoise = (-4,  0)\ntw_cyan      = (-2,  0)\ntw_blue      = (-1, -1)\ntw_purple    = ( 0,  0)\n\ntw_light = (tw_red, tw_orange, tw_yellow, tw_green,\n            tw_turquoise, tw_cyan, tw_blue, tw_purple)\n\nnew_colors_light = adjust_color_lch.(jl_colors, tw_light)\n\nnew_red, new_orange, new_yellow, new_green, new_turquoise, new_cyan, new_blue, new_purple =\n    new_colors_light\n\ndl_red       = 10\ndl_orange    = 10\ndl_yellow    = 33\ndl_green     = 10\ndl_turquoise = 13\ndl_cyan      = 18\ndl_blue      = 11\ndl_purple    = 10\n\ndl = (dl_red, dl_orange, dl_yellow, dl_green, dl_turquoise, dl_cyan, dl_blue, dl_purple)\n\nnew_colors_dark = lch_darken.(new_colors_light, dl)\n\nnew_red_dark, new_orange_dark, new_yellow_dark, new_green_dark,\nnew_turquoise_dark, new_cyan_dark, new_blue_dark, new_purple_dark = new_colors_dark\n\nansi_base_colors = (new_red, new_green, new_yellow, new_blue, new_purple, new_turquoise)\n\ndl_ansi_light_green   = 8\ndl_ansi_light_yellow  = 24\ndl_ansi_light_magenta = 1\ndl_ansi_light_cyan    = 6\n\ndl_ansi_light = (0, dl_ansi_light_green, dl_ansi_light_yellow,\n                 0, dl_ansi_light_magenta, dl_ansi_light_cyan)\n\nansi_light_red     = new_red\nansi_light_green   = lch_darken(new_green, dl_ansi_light_green)\nansi_light_yellow  = lch_darken(new_yellow, dl_ansi_light_yellow)\nansi_light_blue    = new_blue\nansi_light_magenta = lch_darken(new_purple, dl_ansi_light_magenta)\nansi_light_cyan    = lch_darken(new_turquoise, dl_ansi_light_cyan)\n\ndl_ansi_red     = 11\ndl_ansi_green   = 7\ndl_ansi_yellow  = 12\ndl_ansi_blue    = 9\ndl_ansi_magenta = 8\ndl_ansi_cyan    = 9\n\ndl_ansi = (dl_ansi_red, dl_ansi_green, dl_ansi_yellow,\n           dl_ansi_blue, dl_ansi_magenta, dl_ansi_cyan)\n\nansi_colors_light = [\n    colorant\"#242424\",\n    lch_darken(ansi_light_red, dl_ansi_red),\n    lch_darken(ansi_light_green, dl_ansi_green),\n    lch_darken(ansi_light_yellow, dl_ansi_yellow),\n    lch_darken(ansi_light_blue, dl_ansi_blue),\n    lch_darken(ansi_light_magenta, dl_ansi_magenta),\n    lch_darken(ansi_light_cyan, dl_ansi_cyan),\n    colorant\"#8f8f8f\",\n    colorant\"#707070\",\n    ansi_light_red,\n    ansi_light_green,\n    ansi_light_yellow,\n    ansi_light_blue,\n    ansi_light_magenta,\n    ansi_light_cyan,\n    colorant\"#f5f5f5\"\n]\n\nll_ansi_red     = 16\nll_ansi_green   = 10\nll_ansi_yellow  = 0\nll_ansi_blue    = 16\nll_ansi_magenta = 16\nll_ansi_cyan    = 8\n\n\nll_ansi = (ll_ansi_red, ll_ansi_green, ll_ansi_yellow,\n           ll_ansi_blue, ll_ansi_magenta, ll_ansi_cyan)\n\nansi_red_dark = lch_lighten(new_red, ll_ansi_red)\nansi_green_dark = lch_lighten(new_green, ll_ansi_green)\nansi_yellow_dark = lch_lighten(new_yellow, ll_ansi_yellow)\nansi_blue_dark = lch_lighten(new_blue, ll_ansi_blue)\nansi_magenta_dark = lch_lighten(new_purple, ll_ansi_magenta)\nansi_cyan_dark = lch_lighten(new_turquoise, ll_ansi_cyan)\n\nll_ansi_light_red     = 7\nll_ansi_light_green   = 12\nll_ansi_light_yellow  = 14\nll_ansi_light_blue    = 7\nll_ansi_light_magenta = 9\nll_ansi_light_cyan    = 7\n\nll_ansi_light = (ll_ansi_light_red, ll_ansi_light_green, ll_ansi_light_yellow,\n                 ll_ansi_light_blue, ll_ansi_light_magenta, ll_ansi_light_cyan)\n\nansi_colors_dark = [\n    colorant\"#242424\",\n    ansi_red_dark,\n    ansi_green_dark,\n    ansi_yellow_dark,\n    ansi_blue_dark,\n    ansi_magenta_dark,\n    ansi_cyan_dark,\n    colorant\"#b3bdbe\",\n    colorant\"#92a0a2\",\n    lch_lighten(ansi_red_dark, ll_ansi_light_red),\n    lch_lighten(ansi_green_dark, ll_ansi_light_green),\n    lch_lighten(ansi_yellow_dark, ll_ansi_light_yellow),\n    lch_lighten(ansi_blue_dark, ll_ansi_light_blue),\n    lch_lighten(ansi_magenta_dark, ll_ansi_light_magenta),\n    lch_lighten(ansi_cyan_dark, ll_ansi_light_cyan),\n    colorant\"#f5f5f5\"\n]\n\nfunction print_adjust_color(f, s, c, d)\n    if d == 0\n        print(f, raw\"$\", s)\n        return\n    end\n    dh0, ds0, dl0 = get_hsl_adjuster(c, d)\n    print(f, raw\"adjust-color($\", s, \", \")\n    print(f, raw\"$hue: \", dh0, \", \")\n    print(f, raw\"$saturation: \", ds0, \", \")\n    print(f, raw\"$lightness: \", dl0, \")\")\nend\n\nopen(joinpath(@__DIR__, \"..\", \"scss\", \"_basiccolors.scss\"), \"w\") do f\n    sym = (:red, :orange, :yellow, :green, :turquoise, :cyan, :blue, :purple)\n    for (s, c) in zip(sym, new_colors_light)\n        println(f, raw\"$\", s, \": #\", hex(c, :rrggbb), \";\")\n    end\n    println(f)\n    for (s, c, d) in zip(sym, new_colors_light, dl)\n        print(f, raw\"$\", s, \"-dark: \")\n        print_adjust_color(f, s, c, -d)\n        println(f, \";\")\n    end\nend\n\nopen(joinpath(@__DIR__, \"..\", \"scss\", \"_ansicolors_def.scss\"), \"w\") do f\n    println(f, raw\"@if $documenter-is-dark-theme {\")\n    asym = (:red, :green, :yellow, :blue, :magenta, :cyan)\n    sym  = (:red, :green, :yellow, :blue, :purple, :turquoise)\n    for (as, s, c, d) in zip(asym, sym, ansi_base_colors, ll_ansi)\n        print(f, raw\"  $ansi-\", as, \": \")\n        print_adjust_color(f, s, c, d)\n        println(f, \" !default;\")\n    end\n    println(f, raw\"  $ansi-white: lighten($grey-light, 14) !default;\", \"\\n\")\n    println(f, raw\"  $ansi-light-black: darken($ansi-white, 12) !default;\")\n    for (as, c, d) in zip(asym, ansi_colors_dark[2:7], ll_ansi_light)\n        print(f, raw\"  $ansi-light-\", as, \": \")\n        print_adjust_color(f, \"ansi-$as\", c, d)\n        println(f, \" !default;\")\n    end\n    println(f, \"}\")\n    println(f, \"@else {\")\n    println(f, raw\"  $ansi-light-black: darken($grey, 4) !default;\")\n    for (as, s, c, d) in zip(asym, sym, ansi_base_colors, dl_ansi_light)\n        print(f, raw\"  $ansi-light-\", as, \": \")\n        print_adjust_color(f, s, c, -d)\n        println(f, \" !default;\")\n    end\n    println(f)\n    for (as, c, d) in zip(asym, ansi_colors_light[10:15], dl_ansi)\n        print(f, raw\"  $ansi-\", as, \": \")\n        print_adjust_color(f, \"ansi-light-$as\", c, -d)\n        println(f, \" !default;\")\n    end\n    println(f, raw\"  $ansi-white: lighten($ansi-light-black, 12) !default;\")\n    println(f, \"}\")\nend","category":"page"},{"location":"design-language/#Policy","page":"Design Language","title":"Policy","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"Ensure color accessibility (e.g. contrast)\nHarmonize the light and dark themes\nUse derived colors with systematic schemes (i.e. reduce magic numbers)\nImitate major color schemes\nInherit Julia's color identity","category":"page"},{"location":"design-language/#Basic-Colors","page":"Design Language","title":"Basic Colors","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"Here, the basic colors are $red, $orange, $yellow, $green, $turquoise, $cyan, $blue, and $purple. These names are from the Bulma CSS framework, but since the time it was introduced into Documenter.jl, their colors have been customized from the initial values. The basic colors are assigned separately for the light and dark themes.","category":"page"},{"location":"design-language/#Documenter-v0.27","page":"Design Language","title":"Documenter v0.27","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"d27_light\", jl_logo_colors, d27_colors_light, bg_documenter_light) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"d27_dark\", jl_logo_colors, d27_colors_dark, bg_documenter_dark) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"d27_both\", d27_colors_light, d27_colors_dark, colorant\"#888\") # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"In the three figures above, the small filled circles represent the basic colors. Their angles represent the hue, and their radii represent the lightness (in the Lab color space). The squares indicate Julia's logo colors (red, green, blue, and purple). The chart with a white background shows the basic colors for the light theme, the chart with a black background shows the basic colors for the dark theme, and the chart with a gray background shows the basic colors for both the light and dark themes.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ContrastChecker(d27_colors_light) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ContrastChecker(d27_colors_dark) # hide","category":"page"},{"location":"design-language/#Tweaked","page":"Design Language","title":"Tweaked","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"new_light\", jl_logo_colors, new_colors_light, bg_documenter_light) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"new_dark\", jl_logo_colors, new_colors_dark, bg_documenter_dark) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ColorOrbits(\"new_both\", new_colors_light, new_colors_dark, colorant\"#888\") # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ContrastChecker(new_colors_light) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"ContrastChecker(new_colors_dark) # hide","category":"page"},{"location":"design-language/#Light-Colors","page":"Design Language","title":"Light Colors","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(jl_red, d27_red, tw_red) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(jl_green, d27_green, tw_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(jl_blue, d27_blue, tw_blue) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(jl_purple, d27_purple, tw_purple) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(lch_to_rgb8(jl_orange), d27_orange, tw_orange) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(lch_to_rgb8(jl_yellow), d27_yellow, tw_yellow) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(lch_to_rgb8(jl_turquoise), d27_turquoise, tw_turquoise) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(lch_to_rgb8(jl_cyan), d27_cyan, tw_cyan) # hide","category":"page"},{"location":"design-language/#Dark-Colors","page":"Design Language","title":"Dark Colors","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_red, d27_red_dark, dl_red) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_green, d27_green_dark, dl_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_blue, d27_cyan_dark, dl_blue) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_purple, d27_purple_dark, dl_purple) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_orange, d27_orange_dark, dl_orange) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_yellow, d27_yellow_dark, dl_yellow) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_turquoise, d27_turquoise_dark, dl_turquoise) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_cyan, d27_cyan_dark, dl_cyan) # hide","category":"page"},{"location":"design-language/#Demos","page":"Design Language","title":"Demos","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"danger: Red\nThis is a !!! danger-type admonition.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"warning: Yellow\nThis is a !!! warning-type admonition.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"tip: Green\nThis is a !!! tip-type admonition.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"compat: Turquoise\nThis is a !!! compat-type admonition.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"info: Cyan\nThis is a !!! info-type admonition.","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"unknown: Unknown\nThis is an unknown admonition.","category":"page"},{"location":"design-language/#Primary-Color","page":"Design Language","title":"Primary Color","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"TBD","category":"page"},{"location":"design-language/#Terminal-(ANSI)-Colors","page":"Design Language","title":"Terminal (ANSI) Colors","text":"","category":"section"},{"location":"design-language/#Light-theme","page":"Design Language","title":"Light theme","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_green, bg_light, dl_ansi_light_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_yellow, bg_light, dl_ansi_light_yellow) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_purple, bg_light, dl_ansi_light_magenta) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(new_turquoise, bg_light, dl_ansi_light_cyan) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_red, ansi_light_red, dl_ansi_red) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_green, ansi_light_green, dl_ansi_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_yellow, ansi_light_yellow, dl_ansi_yellow) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_blue, ansi_light_blue, dl_ansi_blue) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_magenta, ansi_light_magenta, dl_ansi_magenta) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"DarkerVariationSwatches(ansi_light_cyan, ansi_light_cyan, dl_ansi_cyan) # hide","category":"page"},{"location":"design-language/#Dark-theme","page":"Design Language","title":"Dark theme","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(new_red, bg_dark, ll_ansi_red) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(new_green, bg_dark, ll_ansi_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(new_blue, bg_dark, ll_ansi_blue) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(new_purple, bg_dark, ll_ansi_magenta) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(new_turquoise, bg_dark, dl_ansi_light_cyan) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_red_dark, ansi_red_dark, ll_ansi_light_red) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_green_dark, ansi_green_dark, ll_ansi_light_green) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_yellow_dark, ansi_yellow_dark, ll_ansi_light_yellow) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_blue_dark, ansi_blue_dark, ll_ansi_light_blue) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_magenta_dark, ansi_magenta_dark, ll_ansi_light_magenta) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"LighterVariationSwatches(ansi_cyan_dark, ansi_cyan_dark, ll_ansi_light_cyan) # hide","category":"page"},{"location":"design-language/#Demos-2","page":"Design Language","title":"Demos","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"TerminalPreview(ansi_colors_light, bg_light) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"TerminalPreview(ansi_colors_dark, bg_dark) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"<pre><code class=\"language-julia-repl\" style=\"display:block;\">julia&gt; using Crayons</code><code class=\"nohighlight ansi\" style=\"display:block;\"></code><br/><code class=\"language-julia-repl\" style=\"display:block;\">julia&gt; Crayons.print_logo()</code><code class=\"nohighlight ansi\" style=\"display:block;\">\n\n   <span class=\"sgr91\">██████╗</span><span class=\"sgr92\">██████╗  </span><span class=\"sgr93\">█████╗ </span><span class=\"sgr94\">██╗   ██╗ </span><span class=\"sgr95\">██████╗ </span><span class=\"sgr96\">███╗   ██╗</span><span class=\"sgr90\">███████╗\n  </span><span class=\"sgr91\">██╔════╝</span><span class=\"sgr92\">██╔══██╗</span><span class=\"sgr93\">██╔══██╗</span><span class=\"sgr94\">╚██╗ ██╔╝</span><span class=\"sgr95\">██╔═══██╗</span><span class=\"sgr96\">████╗  ██║</span><span class=\"sgr90\">██╔════╝\n  </span><span class=\"sgr91\">██║     </span><span class=\"sgr92\">██████╔╝</span><span class=\"sgr93\">███████║ </span><span class=\"sgr94\">╚████╔╝ </span><span class=\"sgr95\">██║   ██║</span><span class=\"sgr96\">██╔██╗ ██║</span><span class=\"sgr90\">███████╗\n  </span><span class=\"sgr91\">██║     </span><span class=\"sgr92\">██╔══██╗</span><span class=\"sgr93\">██╔══██║  </span><span class=\"sgr94\">╚██╔╝  </span><span class=\"sgr95\">██║   ██║</span><span class=\"sgr96\">██║╚██╗██║</span><span class=\"sgr90\">╚════██║\n  </span><span class=\"sgr91\">╚██████╗</span><span class=\"sgr92\">██║  ██║</span><span class=\"sgr93\">██║  ██║   </span><span class=\"sgr94\">██║   </span><span class=\"sgr95\">╚██████╔╝</span><span class=\"sgr96\">██║ ╚████║</span><span class=\"sgr90\">███████║\n   </span><span class=\"sgr91\">╚═════╝</span><span class=\"sgr92\">╚═╝  ╚═╝</span><span class=\"sgr93\">╚═╝  ╚═╝   </span><span class=\"sgr94\">╚═╝    </span><span class=\"sgr95\">╚═════╝ </span><span class=\"sgr96\">╚═╝  ╚═══╝</span><span class=\"sgr90\">╚══════╝</span></code><br/><code class=\"language-julia-repl\" style=\"display:block;\">julia&gt; Crayons.test_system_colors()</code><code class=\"nohighlight ansi\" style=\"display:block;\"><span class=\"sgr30\">          black </span><span class=\"sgr40\">black</span>\n<span class=\"sgr31\">            red </span><span class=\"sgr41\">red</span>\n<span class=\"sgr32\">          green </span><span class=\"sgr42\">green</span>\n<span class=\"sgr33\">         yellow </span><span class=\"sgr43\">yellow</span>\n<span class=\"sgr34\">           blue </span><span class=\"sgr44\">blue</span>\n<span class=\"sgr35\">        magenta </span><span class=\"sgr45\">magenta</span>\n<span class=\"sgr36\">           cyan </span><span class=\"sgr46\">cyan</span>\n<span class=\"sgr37\">     light_gray </span><span class=\"sgr47\">light_gray</span>\n        default default\n<span class=\"sgr90\">      dark_gray </span><span class=\"sgr100\">dark_gray</span>\n<span class=\"sgr91\">      light_red </span><span class=\"sgr101\">light_red</span>\n<span class=\"sgr92\">    light_green </span><span class=\"sgr102\">light_green</span>\n<span class=\"sgr93\">   light_yellow </span><span class=\"sgr103\">light_yellow</span>\n<span class=\"sgr94\">     light_blue </span><span class=\"sgr104\">light_blue</span>\n<span class=\"sgr95\">  light_magenta </span><span class=\"sgr105\">light_magenta</span>\n<span class=\"sgr96\">     light_cyan </span><span class=\"sgr106\">light_cyan</span>\n<span class=\"sgr97\">          white </span><span class=\"sgr107\">white</span></code></pre>","category":"page"},{"location":"design-language/#Variants","page":"Design Language","title":"Variants","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"TBD","category":"page"},{"location":"design-language/#Pale-turquoise","page":"Design Language","title":"Pale turquoise","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_turquoise, (-12, -8)), bg_light, (0, 0)) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_turquoise, (8, -8)), bg_dark, (0, 0)) # hide","category":"page"},{"location":"design-language/#Pale-blue","page":"Design Language","title":"Pale blue","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_blue, (0, -8)), bg_light, (0, 0)) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_blue, (8, -8)), bg_dark, (0, 0)) # hide","category":"page"},{"location":"design-language/#Gray-beige","page":"Design Language","title":"Gray beige","text":"","category":"section"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_yellow, (-12, -20)), bg_light, (0, 0)) # hide","category":"page"},{"location":"design-language/","page":"Design Language","title":"Design Language","text":"VariationSwatches(adjust_color_lch(jl_yellow, (-8, -20)), bg_dark, (0, 0)) # hide","category":"page"},{"location":"#July-Morning/Night-Theme","page":"Introduction","title":"July Morning/Night Theme","text":"","category":"section"}]
}
